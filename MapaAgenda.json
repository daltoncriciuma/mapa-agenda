{"files":[{"id":"fb30b432-7629-45b2-90cc-086126822f03","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Sao_Paulo\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"7226e010-4e51-42ba-9b1b-f69f8809de1a","name":"MapaAgenda","type":"server_js","source":"function gerarGeoJSONAgenda() {\n  const calendarioId \u003d \u0027a3c407aac2505d4bbdb4c66ca99d0283219630c098987ba04692ab63a2fd329d@group.calendar.google.com\u0027;\n  const hoje \u003d new Date();\n  const fim \u003d new Date();\n  fim.setMonth(fim.getMonth() + 6);\n\n  const eventos \u003d CalendarApp.getCalendarById(calendarioId).getEvents(hoje, fim);\n  const features \u003d [];\n\n  for (const evento of eventos) {\n    const local \u003d evento.getLocation();\n    if (!local) continue;\n\n    // Só aceita links encurtados do Google Maps\n    if (!local.startsWith(\"https://goo.gl/maps/\")) continue;\n\n    const coords \u003d coordenadasDeShortLink(local);\n    if (!coords) continue;\n\n    const titulo \u003d evento.getTitle();\n    const descricao \u003d evento.getDescription();\n    const inicio \u003d evento.getStartTime();\n    const mes \u003d inicio.getMonth() + 1;\n    const ano \u003d inicio.getFullYear();\n\n    features.push({\n      type: \"Feature\",\n      properties: {\n        titulo,\n        descricao,\n        data: inicio.toISOString(),\n        mes,\n        ano,\n        local\n      },\n      geometry: {\n        type: \"Point\",\n        coordinates: [coords.lng, coords.lat]\n      }\n    });\n  }\n\n  const geojson \u003d {\n    type: \"FeatureCollection\",\n    features\n  };\n\n  const arquivos \u003d DriveApp.getFilesByName(\u0027eventos.geojson\u0027);\n  if (arquivos.hasNext()) {\n    const antigo \u003d arquivos.next();\n    antigo.setTrashed(true);\n  }\n\n  const novo \u003d DriveApp.createFile(\u0027eventos.geojson\u0027, JSON.stringify(geojson), MimeType.PLAIN_TEXT);\n  novo.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);\n  Logger.log(\u0027GeoJSON gerado: \u0027 + novo.getUrl());\n}\n\n// Função para obter coordenadas de um shortlink do Google Maps\nfunction coordenadasDeShortLink(shortUrl) {\n  try {\n    // Segue o redirecionamento\n    const options \u003d { followRedirects: false, muteHttpExceptions: true };\n    const response \u003d UrlFetchApp.fetch(shortUrl, options);\n    const headers \u003d response.getAllHeaders();\n\n    // Extrai o destino final do Location\n    const redirectUrl \u003d headers[\u0027Location\u0027] || headers[\u0027location\u0027];\n    if (!redirectUrl) return null;\n\n    // Procura pelas coordenadas na URL final do Maps\n    // Exemplo: https://www.google.com/maps/place/.../@-28.6835157,-49.3697699,17z/...\n    const regex \u003d /@(-?\\d+\\.\\d+),(-?\\d+\\.\\d+)/;\n    const match \u003d regex.exec(redirectUrl);\n    if (match) {\n      return { lat: parseFloat(match[1]), lng: parseFloat(match[2]) };\n    }\n  } catch (e) {\n    Logger.log(\u0027Erro ao obter coordenadas: \u0027 + e);\n  }\n  return null;\n}\n"}]}